# set-bounds 2 1 #

# set-bounds 4 2 #

private empty(x:int) : (unit) = { () };
fun list := empty;
int cnt := 0;
int running := 0;

public enlist(f:(unit->unit)) :(unit) = {
   if (!running) then ()
   else 
       cnt := !cnt + 1;
       let c = !cnt in
       let l = !list in 
           list := fun (z:int) :(unit) -> 
                if (z == c) then (f()) else (l(z))
};

public run(x:unit) :(unit) = {
   running := 1;
   if (0 < !cnt) then 
      (!list)(!cnt);
      cnt := !cnt - 1;
      assert(not (!cnt < 0));
      run()
   else (list := empty; running := 0)       
};