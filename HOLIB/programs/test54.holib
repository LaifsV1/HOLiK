 <T>
  <k>
    import send : ( int -> unit ) public withdraw ( m : int ) : ( unit ) = { if not ( ! funds < m ) then send m ; funds := ! funds - m ; assert not ( ! funds < 0 ) else () } ; int funds := 100 ;
  </k>
  <eval>
    .
  </eval>
  <repo>
    .Map
  </repo>
  <state>
    .Map
  </state>
  <abs>
    .Map
  </abs>
  <pub>
    .Map
  </pub>
  <sig>
    ( assert true )
  </sig>
  <pc>
    ( assert true )
  </pc>
  <kbound>
    3
  </kbound>
  <lbound>
    2
  </lbound>
  <lzero>
    2
  </lzero>
  <trace>
    .
  </trace>
</T>
